Requirements make it work:
	Option 1: (Any System)
	To run it from .core framework, install dotNet core 2.1 which is cross platform to luch it
	    $> dotnet import.dll -h  (h: for help)
		$> dotnet import.dll -c capterra|softadvice -f filepath [-v:Verbosity]

		cd C:\Users\vmonzon\source\repos\import\import\bin\Debug\netcoreapp2.1>
		$> dotnet import -c capterra|softadvice -f filepath [-v:Verbosity]
	
	Optoin 2 (Pick up the bin you need from)
	To run it  without .net core framework in the folder "import\import\bin\Debug\netcoreapp2.1"
		you can see a foler call ubuntu.16.04-x64, from ubutu you can run the software (Idem for osx.10.11-x64)
			$> import -c capterra|softadvice -f filepath [-v:Verbosity]		

		Note: To compile the source for Ubuntu/Mac etc be in the import.project folder and execute (.net core 2.1 nedded, as the bin are given should no be needed)
		   $> dotnet build --runtime ubuntu.16.04-x64	

  import -h (for help)


The capterra import:
	- supports lazy loading
	- it should work with big files

The SoftwareAdvice
   - eager loading
   - it could break with a certan size of the files because reads the file in once.

Considerations:
   - Basic test coverage, the unit test trust in physical files, a nice improve would be the use of DI insted of oblight at the use of the FS.
   - We have add a Strategy pattern in order to allow new  importers in the future.

To Improve(next steps):
   - The import returns IEnumerable<dynamic> to not get typed at eny format, and to allow the lazy loading functionality.
   - The Lazy loading has been implemented using Callbacks because the was an issue with .net yield and the indirect call of the stratygy pattern.
   It would be nice improve the callback to another better aproach.
   - Improve the error handling is quite basic.
   I 
